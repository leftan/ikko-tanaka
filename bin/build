#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var less = require('less');
var compose = require('fcompose');
var find = require('find');


var join = path.join;
var dir = {
  src:      join(__dirname, '../src'),
  template: join(__dirname, '../template'),
  build:    join(__dirname, '../build')
};

var skipFirstParam = function(fn, context) {
  var isError = function(obj) {
    return Object.prototype.toString.call(obj) === '[object Error]';
  };
  return function() {
    var e = arguments[0];
    if (isError(e)) {
      console.error(e.message);
      [].push.call(arguments, '');
    }
    fn.apply(context, [].slice.call(arguments, 1));
  }
};

var read = function(file, fn) {
  if (fs.existsSync(file) && fs.statSync(file).isFile())
    fs.readFile(file, 'utf-8', skipFirstParam(fn));
  } else {
    fn(file);
  }
};

var getBody = function(file, fn) {
  var regBody = /<body.*>(\s*(.|\n)*\s*)<\/body>/g; 
  read(file, function(html) {
    html.replace(regBody, skipFirstParam(fn));
  });
};

var less2css = function(file, fn) {
  read(file, function(content) {
    less.render(content, { paths: [path.dirname(file)] }, skipFirstParam(fn));
  });
};


var readSource = function(sourceDir) {
  var styles = [];
  var htmls = [];
  find
    .eachdir(/^[^_]/, sourceDir, function(src) {
      less2css(join(src, 'index.less'), function(css) {
        styles.push(css);    
      });
      getBody(join(src, 'index.html'), function(html) { 
        htmls.push('<section class="page">' + html + '</section');
      });
    })
    .end(function() {
      fcomose(
        join(dir.temolate, 'index.less'),
        join(dir.build, 'index.css')
        function(content, fn) {
          less2css(content, function(css) {
            fn(css + styles.join('\n'));
          });
        });
      fcomose(
        join(dir.temolate, 'index.html'),
        join(dir.build, 'index.html')
        function(content, fn) {
          fn(
            content.replace(/{{\s*content\*}}/g, htmls.join('\n'))        
          );
        }); 
  });
}

readSource(dir.src);


